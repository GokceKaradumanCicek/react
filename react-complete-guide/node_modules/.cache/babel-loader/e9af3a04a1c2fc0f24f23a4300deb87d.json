{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactTutorial\\\\react-complete-guide\\\\src\\\\components\\\\Expense\\\\ExpensesChart.js\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpensesChart(props) {\n  const chartDataPoints = [{\n    label: 'Jan',\n    value: 0\n  }, {\n    label: 'Feb',\n    value: 0\n  }, {\n    label: 'Mar',\n    value: 0\n  }, {\n    label: 'Apr',\n    value: 0\n  }, {\n    label: 'May',\n    value: 0\n  }, {\n    label: 'Jun',\n    value: 0\n  }, {\n    label: 'Jul',\n    value: 0\n  }, {\n    label: 'Aug',\n    value: 0\n  }, {\n    label: 'Sep',\n    value: 0\n  }, {\n    label: 'Oct',\n    value: 0\n  }, {\n    label: 'Nov',\n    value: 0\n  }, {\n    label: 'Dec',\n    value: 0\n  }]; //We are going to use 'ExpenseChart' in the Expense.js so props come from Expense.js,expect to get that list of expenses. \n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); // starting 0 Januvary=>0,\n    //We are going to use that property to match chartDataPoints element,Forexample; the index of januvary is also 0 in the array\n\n    chartDataPoints[expenseMonth].value += expense.amount; //Dont forget that expenseMonth is a number represeting year\n    //chartDatapoint value is updating with adding amount(initially was 0)\n  }\n\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 12\n  }, this);\n}\n\n_c = ExpensesChart;\nexport default ExpensesChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"sources":["D:/reactTutorial/react-complete-guide/src/components/Expense/ExpensesChart.js"],"names":["Chart","ExpensesChart","props","chartDataPoints","label","value","expense","expenses","expenseMonth","date","getMonth","amount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,gBAAlB;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,QAAMC,eAAe,GAAC,CAClB;AAACC,IAAAA,KAAK,EAAC,KAAP;AAAaC,IAAAA,KAAK,EAAC;AAAnB,GADkB,EAElB;AAACD,IAAAA,KAAK,EAAC,KAAP;AAAaC,IAAAA,KAAK,EAAC;AAAnB,GAFkB,EAGlB;AAACD,IAAAA,KAAK,EAAC,KAAP;AAAaC,IAAAA,KAAK,EAAC;AAAnB,GAHkB,EAIlB;AAACD,IAAAA,KAAK,EAAC,KAAP;AAAaC,IAAAA,KAAK,EAAC;AAAnB,GAJkB,EAKlB;AAACD,IAAAA,KAAK,EAAC,KAAP;AAAaC,IAAAA,KAAK,EAAC;AAAnB,GALkB,EAMlB;AAACD,IAAAA,KAAK,EAAC,KAAP;AAAaC,IAAAA,KAAK,EAAC;AAAnB,GANkB,EAOlB;AAACD,IAAAA,KAAK,EAAC,KAAP;AAAaC,IAAAA,KAAK,EAAC;AAAnB,GAPkB,EAQlB;AAACD,IAAAA,KAAK,EAAC,KAAP;AAAaC,IAAAA,KAAK,EAAC;AAAnB,GARkB,EASlB;AAACD,IAAAA,KAAK,EAAC,KAAP;AAAaC,IAAAA,KAAK,EAAC;AAAnB,GATkB,EAUlB;AAACD,IAAAA,KAAK,EAAC,KAAP;AAAaC,IAAAA,KAAK,EAAC;AAAnB,GAVkB,EAWlB;AAACD,IAAAA,KAAK,EAAC,KAAP;AAAaC,IAAAA,KAAK,EAAC;AAAnB,GAXkB,EAYlB;AAACD,IAAAA,KAAK,EAAC,KAAP;AAAaC,IAAAA,KAAK,EAAC;AAAnB,GAZkB,CAAtB,CAD0B,CAe1B;;AACA,OAAI,MAAMC,OAAV,IAAqBJ,KAAK,CAACK,QAA3B,EAAoC;AAChC,UAAMC,YAAY,GAACF,OAAO,CAACG,IAAR,CAAaC,QAAb,EAAnB,CADgC,CACW;AAC3C;;AACAP,IAAAA,eAAe,CAACK,YAAD,CAAf,CAA8BH,KAA9B,IAAsCC,OAAO,CAACK,MAA9C,CAHgC,CAIhC;AACA;AACH;;AACD,sBAAO,QAAC,KAAD;AAAO,IAAA,UAAU,EAAER;AAAnB;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;KAxBQF,a;AAyBT,eAAeA,aAAf","sourcesContent":["import Chart from \"../Chart/Chart\";\r\n\r\nfunction ExpensesChart(props) {\r\n    const chartDataPoints=[\r\n        {label:'Jan',value:0},\r\n        {label:'Feb',value:0},\r\n        {label:'Mar',value:0},\r\n        {label:'Apr',value:0},\r\n        {label:'May',value:0},\r\n        {label:'Jun',value:0},\r\n        {label:'Jul',value:0},\r\n        {label:'Aug',value:0},\r\n        {label:'Sep',value:0},\r\n        {label:'Oct',value:0},\r\n        {label:'Nov',value:0},\r\n        {label:'Dec',value:0},\r\n    ];\r\n    //We are going to use 'ExpenseChart' in the Expense.js so props come from Expense.js,expect to get that list of expenses. \r\n    for(const expense of props.expenses){\r\n        const expenseMonth=expense.date.getMonth();// starting 0 Januvary=>0,\r\n        //We are going to use that property to match chartDataPoints element,Forexample; the index of januvary is also 0 in the array\r\n        chartDataPoints[expenseMonth].value +=expense.amount;\r\n        //Dont forget that expenseMonth is a number represeting year\r\n        //chartDatapoint value is updating with adding amount(initially was 0)\r\n    }\r\n    return <Chart dataPoints={chartDataPoints}/>\r\n}\r\nexport default ExpensesChart;"]},"metadata":{},"sourceType":"module"}