{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactTutorial\\\\login_logout_useEffect()\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    }; // state is the last snapshot of action\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_PASSWORD') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === 'PASSWORD_VALIDITY') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    }; // state is the last snapshot of action\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  //const [enteredEmail, setEnteredEmail] = useState('');\n  //const [emailIsValid, setEmailIsValid] = useState();\n  //const [enteredPassword, setEnteredPassword] = useState('');\n  //const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  }); // useEffect(()=>{\n  //   const identifier= setTimeout(()=>{\n  //     console.log(\"UseEffect Runs!\");\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //   );\n  //   }, 1000);\n  //   return(()=>{\n  //     console.log(\"Timeout cleaned!\")\n  //     clearTimeout(identifier);\n  //   });\n  // }, [enteredEmail, enteredPassword, setFormIsValid]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'USER_PASSWORD',\n      val: event.target.value\n    });\n    setFormIsValid(passwordState.isValid && emailState.isValid);\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: 'PASSWORD_VALIDITY'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"GEeh69MpgoYPTwJQLbwIod0Dm2Q=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/reactTutorial/login_logout_useEffect()/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","emailChangeHandler","event","target","validateEmailHandler","passwordChangeHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState ,useEffect, useReducer} from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst emailReducer=(state,action)=>{\n  if (action.type==='USER_INPUT'){\n    return {value:action.val, isValid:action.val.includes('@')}\n  }\n  if(action.type==='INPUT_BLUR'){\n    return{value: state.value, isValid:state.value.includes('@')}\n    // state is the last snapshot of action\n  }\n  return {value:'', isValid: false}\n}\n const passwordReducer=(state, action)=>{\n  if (action.type==='USER_PASSWORD'){\n    return {value:action.val, isValid:action.val.trim().length > 6}\n  }\n  if(action.type==='PASSWORD_VALIDITY'){\n    return{value: state.value, isValid:state.value.trim().length > 6}\n    // state is the last snapshot of action\n  }\n  return {value:'', isValid: false}\n }\n\nconst Login = (props) => {\n  //const [enteredEmail, setEnteredEmail] = useState('');\n  //const [emailIsValid, setEmailIsValid] = useState();\n  //const [enteredPassword, setEnteredPassword] = useState('');\n  //const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const[emailState, dispatchEmail]=useReducer(emailReducer, {value:'', isValid:null} );\n  const[passwordState, dispatchPassword]=useReducer(passwordReducer, {value:'', isValid:null});\n  // useEffect(()=>{\n  //   const identifier= setTimeout(()=>{\n  //     console.log(\"UseEffect Runs!\");\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //   );\n  //   }, 1000);\n\n  //   return(()=>{\n  //     console.log(\"Timeout cleaned!\")\n  //     clearTimeout(identifier);\n  //   });\n  // }, [enteredEmail, enteredPassword, setFormIsValid]);\n\n   const emailChangeHandler = (event) => {\n    dispatchEmail({type: 'USER_INPUT', val:event.target.value});\n    setFormIsValid(\n      emailState.isValid && passwordState.isValid\n     );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({type:'INPUT_BLUR'})\n  };\n\n   const passwordChangeHandler = (event) => {\n     dispatchPassword({type:'USER_PASSWORD', val:event.target.value})\n     setFormIsValid(\n       passwordState.isValid && emailState.isValid\n     );\n   };\n\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({type:'PASSWORD_VALIDITY'});\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}